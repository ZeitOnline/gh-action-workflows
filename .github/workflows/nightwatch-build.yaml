name: Build nightwatch tests
on:
  workflow_call:
    inputs:
      project:
        required: false
        type: string
      args:
        required: false
        type: string
        default: |
          --overrides='{ "spec": { "serviceAccount": "baseproject" } }'
      versions:
        required: false
        type: string
    outputs:
      tag:
        description: "Tag of built 'nightwatch' image"
        value: ${{ jobs.build.outputs.tag }}
jobs:
  build:
    name: Build docker image
    runs-on: zon-ubuntu-general-dind
    permissions:
      id-token: write
      contents: write
      checks: write
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set tag
        id: tag
        run: date +tag=%Y%m%d%H%M%S >> "$GITHUB_OUTPUT"
      - name: Set variables
        id: vars
        run: |
          input="${{ inputs.project }}"
          repository="${{ github.repository }}"
          default="${repository##*/}"
          project="${input:-$default}"
          echo "project=$project" >> "$GITHUB_ENV"
          echo "image=${{ vars.GAR_DOCKER_REGISTRY }}/$project-nightwatch" >> "$GITHUB_ENV"
          echo "tag=${{ steps.tag.outputs.tag }}" >> "$GITHUB_ENV"
      - name: Setup auth
        uses: ZeitOnline/gh-action-baseproject@v0
        with:
          project_name: ${{ env.project }}
          environment: staging
          gke_auth: true
          google_auth: true
          gar_docker_auth: true
          vault_export_token: true
      - name: Setup buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: docker
      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: smoketest
          target: nightwatch
          tags: ${{ env.image }}:${{ env.tag }}
          push: true
      - name: Run tests
        run: |
          TAG=${{ env.tag }}
          kubectl config set-context --current --namespace=${{ env.project }}
          kubectl run nightwatch-test-$TAG --image=${{ env.image }}:$TAG --restart=Never ${{ inputs.args }}
          kubectl wait --for=condition=Ready --timeout=60s pods/nightwatch-test-$TAG
          kubectl logs --follow pods/nightwatch-test-$TAG
          sleep 10
          status=$( kubectl get -o template --template='{{.status.phase}}' pods/nightwatch-test-$TAG )
          test "$status" = "Succeeded"
      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        with:
          gpg_private_key: ${{ secrets.ZON_OPS_GPG_KEY_PRIVATE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2
        if: ${{ inputs.versions && github.ref_name == 'main' }}
      - name: Pull recent changes
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        run: |
          git pull
      - name: Set image tags
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        run: |
          cd ${{ inputs.versions }}
          kustomize edit set image nightwatch:${{ env.tag }}
      - name: Commit and push image tags
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        run: |
          git commit -am "Update image versions (``${{ inputs.versions }}``)"
          git push
