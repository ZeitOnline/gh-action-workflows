name: Build nightwatch tests

# ### Example usage `nightwatch.yaml`
# on:
#   push:
#     branches:
#       - main
#     paths:
#       - '.github/workflows/nightwatch.yaml'
#       - 'smoketest/**'
#       - '!smoketest/k8s/versions/*'
#   pull_request:
#     paths:
#       - '.github/workflows/nightwatch.yaml'
#       - 'smoketest/**'
#       - '!smoketest/k8s/versions/*'
# jobs:
#   build:
#     uses: zeitonline/gh-action-workflows/.github/workflows/nightwatch-build.yaml@XXX
#     secrets: inherit
#     with:
#       versions: smoketest/k8s/versions
#       project: MYPROJECT

on:
  workflow_call:
    inputs:
      project:
        required: false
        type: string
      environment:
        required: false
        type: string
        default: staging
      args:
        required: false
        type: string
        default: |
          --override-type=json --overrides='[
            {"op": "add", "path": "/spec/serviceAccount", "value": "baseproject"},
            {"op": "add", "path": "/spec/containers/0/envFrom", "value": [{
                "secretRef": {"name": "nightwatch-secrets", "optional": true}}]}
          ]'
      versions:
        required: false
        type: string
    outputs:
      tag:
        description: "Tag of built 'nightwatch' image"
        value: ${{ jobs.build.outputs.tag }}
jobs:
  build:
    name: Build docker image
    runs-on: zon-ubuntu-general-dind
    permissions:
      id-token: write
      contents: write
      checks: write
    outputs:
      tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          token: ${{ secrets.PRIVATE_REPO_ACCESS_PAT }}
      - name: Set tag
        id: tag
        run: date +tag=%Y%m%d%H%M%S >> "$GITHUB_OUTPUT"
      - name: Set variables
        id: vars
        run: |
          input="${{ inputs.project }}"
          repository="${{ github.repository }}"
          default="${repository##*/}"
          project="${input:-$default}"
          echo "project=$project" >> "$GITHUB_ENV"
          echo "image=${{ vars.GAR_DOCKER_REGISTRY }}/$project-nightwatch" >> "$GITHUB_ENV"
          echo "tag=${{ steps.tag.outputs.tag }}" >> "$GITHUB_ENV"
      - name: Setup auth
        uses: ZeitOnline/gh-action-baseproject@5de2d5139d13fdd55415d2c73b6ed6513570b8e0 # v0
        id: baseproject
        with:
          project_name: ${{ env.project }}
          environment: ${{ inputs.environment }}
          gke_auth: true
          google_auth: true
          gar_docker_auth: true
          vault_export_token: true
      - name: Build & push image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6
        with:
          context: smoketest
          target: nightwatch
          tags: ${{ env.image }}:${{ env.tag }}
          push: true
          secrets: |
            GCLOUD_TOKEN=${{ steps.baseproject.outputs.gcloud_access_token }}
      - uses: ZeitOnline/sysdig-scan-action@6ce72f92e0cb5c80ff798ec3807ee2d829c70b64 # v1.2.0
        if: github.ref_name != 'main'
        with:
          gha_vault_role: ${{steps.baseproject.outputs.gha_vault_role}}
          image_tag: ${{ env.image }}:${{ env.tag }}
      - name: Run tests
        if: github.ref_name != 'main'
        run: |
          TAG=${{ env.tag }}
          kubectl config set-context --current --namespace=${{ env.project }}
          kubectl run nightwatch-test-$TAG --image=${{ env.image }}:$TAG --restart=Never ${{ inputs.args }}
          kubectl wait --for=condition=Ready --timeout=120s pods/nightwatch-test-$TAG
          kubectl logs --follow pods/nightwatch-test-$TAG
          sleep 10
          status=$( kubectl get -o template --template='{{.status.phase}}' pods/nightwatch-test-$TAG )
          kubectl delete pods/nightwatch-test-$TAG
          test "$status" = "Succeeded"
      - name: Pull recent changes
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        run: |
          git pull
      - name: Set image tags
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        run: |
          cd ${{ inputs.versions }}
          kustomize edit set image nightwatch:${{ env.tag }}
      - name: Commit and push image tags
        if: ${{ inputs.versions && github.ref_name == 'main' }}
        run: |
          git commit -am "ci: update image versions (``${{ inputs.versions }}``)"
          git push
