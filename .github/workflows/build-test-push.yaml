name: Test & push
on:
  workflow_call:
    inputs:
      service:
        required: false
        type: string
        default: backend
      project:
        required: false
        type: string
      targets:
        required: false
        type: string
      versions:
        required: false
        type: string
      compose_file:
        required: false
        type: string
        default: testing.yaml
      compose_args:
        required: false
        type: string
      test_args:
        required: false
        type: string
        default: --verbose --junitxml=/testing/junit.xml
      artifacts:
        required: false
        type: string
      docker_context:
        required: false
        type: string
        default: .
    outputs:
      release_created:
        description: Indicator if a release was created
        value: ${{ jobs.test-and-push.outputs.release_created }}
      tag_name:
        description: Release version tag if any
        value: ${{ jobs.test-and-push.outputs.tag_name }}
env:
  COMPOSE_FILE: ${{ inputs.compose_file }}
jobs:
  test-and-push:
    name: Test and push docker images
    runs-on: zon-ubuntu-general-dind
    permissions:
      id-token: write
      contents: write
      checks: write
      pull-requests: write
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true
      # update release pull request or create release (if merged)
      - name: Release please
        id: release
        uses: googleapis/release-please-action@v4
        if: inputs.targets
      # in case of a release any versions should be set via `extra-files`
      # otherwise the image versions are updated for 'staging'
      - name: Test condition
        if: ${{ inputs.versions && !steps.release.outputs.release_created }}
        run: |
          date
